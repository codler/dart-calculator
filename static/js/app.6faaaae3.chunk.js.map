{"version":3,"sources":["boardTargets.ts","useAsyncStorage.tsx","App.tsx"],"names":["targets","Array","flatMap","_","row","map","column","score","multiplyer","push","lastCheckOuts","filter","target","cachePossibleCheckOuts","useAsyncStorage","key","initialValue","useState","storedValue","setStoredValue","isInit","setIsInit","useEffect","AsyncStorage","getItem","then","value","JSON","parse","valueToStore","Function","setItem","stringify","displayScoreLabel","backgroundColor","theme","colors","coolGray","App","safeAreaProps","useSafeArea","safeAreaTop","pt","numberOfPlayers","setNumberOfPlayers","numberOfDarts","setNumberOfDarts","startPoint","setStartPoint","config","parseInt","initialGameState","gameState","setGameState","getRemainingPoints","playerNo","points","forEach","round","Object","values","reduce","prev","curr","style","flex","direction","space","selectedValue","accessibilityLabel","placeholder","mt","onValueChange","itemValue","Item","label","onPress","rountNo","View","marginTop","marginBottom","fontSize","flexDirection","justifyContent","marginLeft","marginRight","dartNo","title","roundNo","addScore","justify","wrap","possibilities","possibleCheckOuts","darts","hasOwnProperty","result","checkOuts","concat","checkOut","newCheckout","unshift","hits","find","checkout","undefined","m","rounded","bg","p","possibility","join","my","href","isExternal","ChooseScoreButton","props","isVisible","setIsVisible","mx","width","colorScheme","Modal","onRequestClose","visible","mb","Index","extendTheme","initialColorMode"],"mappings":"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","file":"static/js/app.6faaaae3.chunk.js","sourcesContent":["export interface Score {\n  score: number;\n  multiplyer: number;\n}\n\nconst targets: Score[] = [...Array(20)].flatMap((_, row) =>\n  [...Array(3)].map((_, column) => ({\n    score: row + 1,\n    multiplyer: column + 1,\n  }))\n);\ntargets.push({ score: 25, multiplyer: 1 });\ntargets.push({ score: 50, multiplyer: 1 });\n\nconst lastCheckOuts = targets.filter(\n  (target) => target.multiplyer === 2 || target.score === 50\n);\n\nconst cachePossibleCheckOuts: {\n  [key: number]: { [key: number]: Score[][] | undefined };\n} = {};\nexport function possibleCheckOuts(\n  points: number,\n  darts: number\n): Score[][] | undefined {\n  if (!cachePossibleCheckOuts[darts]) {\n    cachePossibleCheckOuts[darts] = {};\n  }\n  if (cachePossibleCheckOuts[darts].hasOwnProperty(points)) {\n    return cachePossibleCheckOuts[darts][points];\n  }\n\n  if (darts <= 0 || darts * 60 < points) {\n    return;\n  }\n\n  const result = targets.reduce((prev, target) => {\n    if (points - target.score * target.multiplyer < 0) {\n      return prev;\n    }\n\n    const checkOuts = possibleCheckOuts(\n      points - target.score * target.multiplyer,\n      darts - 1\n    );\n\n    if (checkOuts) {\n      if (!prev) {\n        prev = [];\n      }\n\n      prev = prev.concat(\n        checkOuts.map((checkOut) => {\n          const newCheckout = [...checkOut];\n          newCheckout.unshift(target);\n          return newCheckout;\n        })\n      );\n    }\n\n    const hits = lastCheckOuts.find(\n      (checkout) =>\n        checkout.score === target.score &&\n        checkout.multiplyer === target.multiplyer\n    );\n    if (hits && hits.score * hits.multiplyer === points) {\n      if (!prev) {\n        prev = [];\n      }\n\n      prev = prev.concat([[hits]]);\n    }\n\n    return prev;\n  }, undefined as Score[][] | undefined);\n\n  cachePossibleCheckOuts[darts][points] = result;\n  return result;\n}\n\nexport default targets;\n","import { useState, useEffect } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nfunction useAsyncStorage<T>(\n  key: string,\n  initialValue: T\n): [T, (value: T) => Promise<void>, boolean] {\n  const [storedValue, setStoredValue] = useState<T>(initialValue);\n  const [isInit, setIsInit] = useState(true);\n\n  useEffect(() => {\n    AsyncStorage.getItem(key)\n      .then((value) => {\n        if (value === null) return initialValue;\n        return JSON.parse(value);\n      })\n      .then(setStoredValue)\n      .then(() => setIsInit(false));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [key]);\n\n  const setValue = (value: T) => {\n    const valueToStore = value instanceof Function ? value(storedValue) : value;\n    setStoredValue(valueToStore);\n    return AsyncStorage.setItem(key, JSON.stringify(valueToStore));\n  };\n\n  return [storedValue, setValue, isInit];\n}\n\nexport default useAsyncStorage;\n","// import { StatusBar } from \"expo-status-bar\";\n// <StatusBar style=\"auto\" />\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  Text,\n  NativeBaseProvider,\n  Center,\n  extendTheme,\n  Heading,\n  VStack,\n  Select,\n  Stack,\n  Box,\n  Link,\n  Flex,\n  useSafeArea,\n  theme,\n  ScrollView,\n} from \"native-base\";\nimport { Score, possibleCheckOuts } from \"./boardTargets\";\nimport useAsyncStorage from \"./useAsyncStorage\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport { Modal, View } from \"react-native\";\n\ntype GameState = GameRound[];\ntype Player = number;\ntype Dart = number;\n\ninterface GameRound {\n  [key: Player]: {\n    [key: Dart]: Score | undefined;\n  };\n}\n\nconst displayScoreLabel = (score?: Score) => {\n  if (!score) {\n    return \"____\";\n  } else if (score.multiplyer > 1) {\n    return `${score.score}x${score.multiplyer}`;\n  } else {\n    return `${score.score}`;\n  }\n};\n\nconst backgroundColor = theme.colors.coolGray[800];\n\nfunction App() {\n  const safeAreaProps = useSafeArea({ safeAreaTop: true, pt: 2 });\n\n  const [numberOfPlayers, setNumberOfPlayers] = useAsyncStorage<string>(\n    \"numberOfPlayers\",\n    \"2\"\n  );\n  const [numberOfDarts, setNumberOfDarts] = useAsyncStorage<string>(\n    \"numberOfDarts\",\n    \"3\"\n  );\n  const [startPoint, setStartPoint] = useAsyncStorage<string>(\n    \"startPoint\",\n    \"301\"\n  );\n\n  const config = {\n    numberOfPlayers: parseInt(numberOfPlayers),\n    numberOfDarts: parseInt(numberOfDarts),\n    startPoint: parseInt(startPoint),\n  };\n\n  const initialGameState = [[]];\n\n  const [gameState, setGameState] = useAsyncStorage<GameState>(\n    \"gameState\",\n    initialGameState\n  );\n\n  const addRound = () => {\n    const round: GameRound = [];\n    gameState.push(round);\n    setGameState([...gameState]);\n  };\n\n  const addScore = (\n    score: Score | undefined,\n    roundNo: number,\n    playerNo: number,\n    dartNo: number\n  ) => {\n    if (!gameState[roundNo][playerNo]) {\n      gameState[roundNo][playerNo] = [];\n    }\n    gameState[roundNo][playerNo][dartNo] = score;\n    setGameState([...gameState]);\n  };\n\n  const getRemainingPoints = (playerNo: number): number => {\n    let points = config.startPoint;\n    gameState.forEach((round) => {\n      if (round[playerNo]) {\n        points -= Object.values(round[playerNo]).reduce((prev, curr) => {\n          if (curr) {\n            return prev + curr.score * curr.multiplyer;\n          }\n          return prev;\n        }, 0);\n      }\n    });\n\n    return points;\n  };\n\n  return (\n    <ScrollView style={{ backgroundColor }}>\n      <Center flex={1} {...safeAreaProps}>\n        <Heading>Classic Dart</Heading>\n        <Stack direction={[\"column\", \"column\", \"row\"]} space={1}>\n          <Select\n            selectedValue={numberOfPlayers}\n            accessibilityLabel=\"Number of players\"\n            placeholder=\"Number of players\"\n            mt={1}\n            onValueChange={(itemValue) => setNumberOfPlayers(itemValue)}\n          >\n            <Select.Item label=\"One Player\" value=\"1\" />\n            <Select.Item label=\"Two Players\" value=\"2\" />\n            <Select.Item label=\"Three Players\" value=\"3\" />\n            <Select.Item label=\"Four Players\" value=\"4\" />\n            <Select.Item label=\"Five Players\" value=\"5\" />\n            <Select.Item label=\"Six Players\" value=\"6\" />\n          </Select>\n          <Select\n            selectedValue={numberOfDarts}\n            accessibilityLabel=\"Number of Darts\"\n            placeholder=\"Number of Darts\"\n            mt={1}\n            onValueChange={(itemValue) => setNumberOfDarts(itemValue)}\n          >\n            <Select.Item label=\"One Dart\" value=\"1\" />\n            <Select.Item label=\"Two Darts\" value=\"2\" />\n            <Select.Item label=\"Three Darts\" value=\"3\" />\n            <Select.Item label=\"Four Darts\" value=\"4\" />\n            <Select.Item label=\"Five Darts\" value=\"5\" />\n            <Select.Item label=\"Six Darts\" value=\"6\" />\n          </Select>\n          <Select\n            selectedValue={startPoint}\n            accessibilityLabel=\"Start point\"\n            placeholder=\"Start point\"\n            mt={1}\n            onValueChange={(itemValue) => setStartPoint(itemValue)}\n          >\n            <Select.Item label=\"301 points\" value=\"301\" />\n            <Select.Item label=\"501 points\" value=\"501\" />\n          </Select>\n          <Button onPress={() => setGameState(initialGameState)} mt={[2, 2, 1]}>\n            RESTART GAME\n          </Button>\n        </Stack>\n        <VStack>\n          {gameState.map((round, rountNo) => {\n            return (\n              <View key={rountNo} style={{ marginTop: 20, marginBottom: 20 }}>\n                <Text fontSize=\"lg\">Round: {rountNo + 1}</Text>\n                {[...Array(config.numberOfPlayers)].map((_, playerNo) => {\n                  return (\n                    <View\n                      key={playerNo}\n                      style={{ marginTop: 5, marginBottom: 5 }}\n                    >\n                      <Text>Player {playerNo + 1}</Text>\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          justifyContent: \"space-around\",\n                          marginLeft: 5,\n                          marginRight: 5,\n                        }}\n                      >\n                        {[...Array(config.numberOfDarts)].map((_, dartNo) => {\n                          return (\n                            <ChooseScoreButton\n                              title={displayScoreLabel(\n                                round[playerNo]?.[dartNo]\n                              )}\n                              key={dartNo}\n                              onPress={(score) =>\n                                addScore(score, rountNo, playerNo, dartNo)\n                              }\n                            />\n                          );\n                        })}\n                      </View>\n                    </View>\n                  );\n                })}\n              </View>\n            );\n          })}\n          <Button onPress={addRound}>NEXT ROUND</Button>\n        </VStack>\n        <Flex direction=\"row\" justify=\"space-around\" wrap=\"wrap\" mt={4}>\n          {[...Array(config.numberOfPlayers)].map((_, playerNo) => {\n            const remainingPoints = getRemainingPoints(playerNo);\n            const possibilities = possibleCheckOuts(remainingPoints, 2);\n\n            return (\n              <Box key={playerNo} m={1}>\n                <Box rounded=\"xl\" bg=\"coolGray.900\" p={14}>\n                  <Text fontSize=\"2xl\">Player {playerNo + 1}</Text>\n                  <Text fontSize=\"6xl\">{getRemainingPoints(playerNo)}</Text>\n                </Box>\n                {possibilities && (\n                  <Box rounded=\"xl\" mt={1} bg=\"coolGray.700\" p={14}>\n                    {possibilities.map((possibility) => {\n                      return (\n                        <Text>\n                          {possibility.map(displayScoreLabel).join(\" --> \")}\n                        </Text>\n                      );\n                    })}\n                  </Box>\n                )}\n              </Box>\n            );\n          })}\n        </Flex>\n        <Box my={32}>\n          <Text>Dart calculator made by Han Lin Yap </Text>\n          <Link href=\"https://github.com/codler/dart-calculator\" isExternal>\n            Source code\n          </Link>\n        </Box>\n      </Center>\n    </ScrollView>\n  );\n}\n\ninterface ChooseScoreButtonProps {\n  title: string;\n  onPress: (score?: Score) => void;\n}\n\nconst ChooseScoreButton = (props: ChooseScoreButtonProps) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const { title, onPress } = props;\n\n  return (\n    <>\n      <Button\n        mx={2}\n        my={1}\n        width={60}\n        colorScheme={displayScoreLabel() !== title ? \"indigo\" : \"success\"}\n        onPress={() => setIsVisible(true)}\n      >\n        {title}\n      </Button>\n      <Modal onRequestClose={() => setIsVisible(false)} visible={isVisible}>\n        <ScrollView style={{ backgroundColor }}>\n          <View>\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-around\",\n                marginTop: 40,\n                marginBottom: 10,\n              }}\n            >\n              <Button\n                colorScheme=\"success\"\n                onPress={() => {\n                  onPress(undefined);\n                  setIsVisible(false);\n                }}\n              >\n                0\n              </Button>\n              <Button\n                colorScheme=\"success\"\n                onPress={() => {\n                  onPress({ score: 25, multiplyer: 1 });\n                  setIsVisible(false);\n                }}\n              >\n                25\n              </Button>\n              <Button\n                colorScheme=\"success\"\n                onPress={() => {\n                  onPress({ score: 50, multiplyer: 1 });\n                  setIsVisible(false);\n                }}\n              >\n                50\n              </Button>\n            </View>\n\n            {[...Array(20)].map((_, row) => {\n              return (\n                <View\n                  key={row}\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-around\",\n                    marginBottom: 10,\n                  }}\n                >\n                  {[...Array(3)].map((_, column) => {\n                    const score = { score: row + 1, multiplyer: column + 1 };\n                    const label = displayScoreLabel(score);\n\n                    return (\n                      <Button\n                        key={column}\n                        colorScheme=\"success\"\n                        onPress={() => {\n                          onPress(score);\n                          setIsVisible(false);\n                        }}\n                      >\n                        {label}\n                      </Button>\n                    );\n                  })}\n                </View>\n              );\n            })}\n          </View>\n          <Button onPress={() => setIsVisible(false)} mb={8}>\n            CLOSE\n          </Button>\n        </ScrollView>\n      </Modal>\n    </>\n  );\n};\n\nfunction Index() {\n  const theme = extendTheme({\n    config: {\n      // Changing initialColorMode to 'dark'\n      initialColorMode: \"dark\",\n    },\n  });\n\n  return (\n    <SafeAreaProvider>\n      <NativeBaseProvider theme={theme}>\n        <App />\n      </NativeBaseProvider>\n    </SafeAreaProvider>\n  );\n}\n\nexport default Index;\n"],"sourceRoot":""}